{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","url","delete","number","put","Numbers","numbers","persons","setPersons","setErrorMessage","map","numb","deleteNumber","name","console","log","window","confirm","personService","filter","p","catch","error","setTimeout","initialPersons","Number","onClick","Filter","setNewFilter","value","onChange","event","target","PersonForm","newName","setNewName","newPhone","setNewPhone","nameExists","some","e","sendName","newPerson","returnedPerson","concat","updateName","find","n","changedNumb","person","onSubmit","preventDefault","type","Notification","message","includes","className","App","useState","errorMessage","useEffect","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7206783.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst deleteNumb = (id) => {\r\n    const url = `${baseUrl}/${id}`\r\n    const request = axios.delete(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst modify = (number) => {\r\n    const url = `${baseUrl}/${number.id}`\r\n    const request = axios.put(url, number)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deleteNumb, modify }","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport './index.css'\r\n\r\n\r\nconst Numbers = ({ numbers, persons, setPersons, setErrorMessage }) => {\r\n  const deleteNumberOf = (id, name) => {\r\n    console.log('Deleting ' + id)\r\n    if(window.confirm(`Delete ${name} ?`))\r\n    {\r\n      personService\r\n        .deleteNumb(id)\r\n          .then(response => {\r\n            setPersons(persons.filter(p => p.id !== id))\r\n            setErrorMessage(`Deleted ${name} successfully`)\r\n          })\r\n          .catch(error => {\r\n            setPersons(persons.filter(p => p.id !== id))\r\n            setErrorMessage(\r\n              `${name} was already removed from server`\r\n            )\r\n          })\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n          \r\n      \r\n      personService\r\n        .getAll()\r\n          .then(initialPersons => {\r\n            setPersons(initialPersons)\r\n          })\r\n    }\r\n  }\r\n\r\n  return(\r\n  <div>\r\n    {numbers.map(numb => \r\n      <Number \r\n        key={numb.id} \r\n        number={numb}\r\n        deleteNumber={() => deleteNumberOf(numb.id, numb.name)}\r\n      />\r\n    )}\r\n  </div>\r\n  )\r\n}\r\n\r\nconst Number = ({ number, deleteNumber }) => {\r\n  return(\r\n  <>\r\n    <p key={number.name}>\r\n      {number.name} {number.number} <button onClick={deleteNumber}>delete</button>\r\n    </p>\r\n  </>\r\n  )\r\n}\r\n\r\n\r\nconst Filter = ({filter, setNewFilter}) => {\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n  \r\n  return(\r\n  <div>\r\n    filter shown with <input value={filter} onChange={handleFilterChange} /> \r\n  </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ({ persons, setPersons, newName, setNewName, newPhone, setNewPhone, setErrorMessage}) => {\r\n  const addNumber = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newPhone\r\n    }\r\n    nameExists() \r\n      ? updateName()\r\n      : sendName(persons, setPersons, newPerson)\r\n    setNewName('')\r\n    setNewPhone('')\r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handlePhoneChange = (event) => {\r\n    setNewPhone(event.target.value)\r\n  }\r\n\r\n  const nameExists = () => {\r\n    return(persons.some(e => e.name === newName ))\r\n  }\r\n\r\n  const sendName = (persons, setPersons, newPerson) => {\r\n    personService\r\n      .create(newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setErrorMessage(`Added ${newPerson.name} successfully`)\r\n        })\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n  }\r\n\r\n  const updateName = () => {\r\n    if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\r\n    {\r\n      const newPerson = persons.find(n => n.name === newName)\r\n      const changedNumb = { ...newPerson, number: newPhone }\r\n      const id = newPerson.id\r\n      personService\r\n        .modify(changedNumb)\r\n          .then(response => {\r\n            setPersons(\r\n              persons.map(person => \r\n                person.id !== id ? person : response))\r\n            setErrorMessage(`Updated ${changedNumb.name} successfully`)\r\n          })\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)    \r\n    }\r\n  }\r\n\r\n  return(\r\n    <form onSubmit={addNumber}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newPhone} onChange={handlePhoneChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  console.log(message)\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  console.log(message.includes(\"successfully\"))\r\n  if(message.includes(\"successfully\"))\r\n  { \r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhone, setNewPhone ] = useState('')\r\n  const [ filter, setNewFilter] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n          setPersons(initialPersons)\r\n        })\r\n  }, [])\r\n  console.log('render', persons.length, 'persons')\r\n \r\n  const numbers = (filter === '') ? persons : persons.filter(person => person.name.includes(filter))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} />\r\n      <Filter filter={filter} setNewFilter={setNewFilter} />\r\n      <h3>add a new</h3>\r\n      <PersonForm persons={persons} setPersons={setPersons} newName={newName} setNewName={setNewName} newPhone={newPhone} setNewPhone={setNewPhone} setErrorMessage={setErrorMessage} />\r\n      <h3>Numbers</h3>\r\n      <Numbers numbers={numbers} persons={persons} setPersons={setPersons} setErrorMessage={setErrorMessage} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}